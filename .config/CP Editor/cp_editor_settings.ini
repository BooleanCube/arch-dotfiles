[General]
answer_file_save_path=./${basename}_${1-index}.ans
ask_for_loading_external_changes=true
auto_complete_parentheses=true
auto_indent=true
auto_load_external_changes_if_no_unsaved_modification=true
auto_remove_parentheses=true
auto_save=false
auto_save_interval=1000
auto_save_interval_type=After the last modification
auto_uncheck_accepted_testcases=false
beta=false
check_on_testcases_with_empty_output=false
check_update=true
cursor_width=1
custom_application_font=@Variant(\0\0\0@\0\0\0\x12\0N\0o\0t\0o\0 \0S\0\x61\0n\0s@\"\0\0\0\0\0\0\xff\xff\xff\xff\x5\x1\0\x32\x10)
default_file_paths_for_problem_urls=@Invalid()
default_language=C++
default_time_limit=5000
detached_run_terminal_arguments=-e
detached_run_terminal_program=xterm
display_eoln_in_diff=false
display_test_case_length_limit=500000
editor_font=@Variant(\0\0\0@\0\0\0*\0J\0\x65\0t\0\x42\0r\0\x61\0i\0n\0s\0 \0M\0o\0n\0o\0 \0M\0\x65\0\x64\0i\0u\0m@*\0\0\0\0\0\0\xff\xff\xff\xff\x5\x1\0\x39\x10)
editor_theme=Dracula
extra_bottom_margin=false
file_problem_binding=@Invalid()
first_time_user=false
force_close=false
format_on_auto_save=true
format_on_manual_save=true
full_screen_dialog_shown=true
geometry=@Rect(118 258 1249 767)
html_diff_viewer_length_limit=50000
input_file_save_path=./${basename}_${1-index}.in
locale=English
maximized_window=false
message_length_limit=20000
message_logger_font=@Variant(\0\0\0@\0\0\0\x12\0N\0o\0t\0o\0 \0S\0\x61\0n\0s@\"\0\0\0\0\0\0\xff\xff\xff\xff\x2\x1\0\x32\x10)
number_of_problems_in_contest=5
opacity=100
open_file_length_limit=20000
open_old_file_for_old_problem_url=false
output_display_length_limit=50000
output_length_limit=500000
promotion_dialog_shown=true
recent_files=/home/boole/Documents/bots/discord/lollipop/src/main/java/lollipop/Secret.java, /home/boole/Documents/cp/codeforces/balance.cpp, /home/boole/Documents/cp/codeforces/bestie.py, /home/boole/Documents/cp/codeforces/balance.py, /home/boole/Documents/cp/cf.py, /home/boole/Documents/cp/codeforces/cf.py, /home/boole/Documents/cp/codeforces/modularexponentiation.py, /home/boole/Documents/cp/codeforces/mathematicaladdition.py, /home/boole/Documents/cp/codeforces/sumof2050.py
replace_tabs=false
restore_old_problem_url=false
right_splitter_size=@ByteArray(\0\0\0\xff\0\0\0\x1\0\0\0\x2\0\0\0\xfa\0\0\x1}\x1\xff\xff\xff\xff\x1\0\0\0\x2\0)
run_on_empty_testcase=false
save_faster=false
save_file_on_compilation=true
save_file_on_execution=false
save_tests=false
show_compile_and_run_only=false
show_only_monospaced_font=true
splitter_size=@ByteArray(\0\0\0\xff\0\0\0\x1\0\0\0\x2\0\0\x2\x93\0\0\x2\x1c\x1\xff\xff\xff\xff\x1\0\0\0\x1\0)
tab_jump_out_parentheses=false
tab_width=4
test_case_maximum_height=300
test_cases_font=@Variant(\0\0\0@\0\0\0\x12\0N\0o\0t\0o\0 \0S\0\x61\0n\0s@\"\0\0\0\0\0\0\xff\xff\xff\xff\x2\x1\0\x32\x10)
testcases_matching_rules=@Variant(\0\0\0\v\0\0\0\x2\0\0\0\x10\0(\0.\0*\0)\0\\\0.\0i\0n\0\0\0\f\0\\\0\x31\0.\0\x61\0n\0s), @Variant(\0\0\0\v\0\0\0\x2\0\0\0\x10\0(\0.\0*\0)\0\\\0.\0i\0n\0\0\0\f\0\\\0\x31\0.\0o\0u\0t)
total_usage_time=177972
ui_style=kvantum-dark
use_custom_application_font=false
view_mode=split
wrap_text=false

[cf]
path=cf
show_toast_messages=true

[clang_format]
arguments=
program=clang-format
style=BasedOnStyle: Google

[competitive_companion]
connection_port=10045
enable=true
head_comments=Problem: ${json.name}\nContest: ${json.group}\nURL: ${json.url}\nMemory Limit: ${json.memoryLimit} MB\nTime Limit: ${json.timeLimit} ms
head_comments_powered_by_cp_editor=true
head_comments_time_format=yyyy-MM-dd HH:mm:ss
open_new_tab=true
set_time_limit_for_tab=false

[cpp]
compile_command=c++ -Wall
compiler_output_codec=UTF-8
output_path=${tmpdir}/${basename}
parentheses=@Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0(\0\0\0\x2\0\0\0)\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0{\0\0\0\x2\0\0\0}\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0[\0\0\0\x2\0\0\0]\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1)
run_arguments=
template_cursor_position_offset_characters=4
template_cursor_position_offset_type=end
template_cursor_position_regex=main\\(\\)
template_path=

[default_path]
action\add_pairs_of_test_cases\changes=testcase
action\add_pairs_of_test_cases\uses=${testcase}
action\custom_checker\changes=checker
action\custom_checker\uses=${checker}
action\export_and_import_settings\changes=settings
action\export_and_import_settings\uses=${settings}
action\export_and_load_session\changes=session
action\export_and_load_session\uses=${session}
action\extract_and_load_snippets\changes=snippets
action\extract_and_load_snippets\uses=${snippets}
action\load_single_test_case\changes=testcase
action\load_single_test_case\uses=${testcase}
action\open_contest\changes="contest, file, testcase, checker"
action\open_contest\uses=${contest}
action\open_file\changes="file, testcase, checker"
action\open_file\uses=${file}
action\save_file\changes="file, testcase, checker"
action\save_file\uses=${file}
action\save_test_case_to_a_file\changes=testcase
action\save_test_case_to_a_file\uses=${testcase}
names_and_paths=@Variant(\0\0\0\v\0\0\0\x2\0\0\0\xe\0\x63\0h\0\x65\0\x63\0k\0\x65\0r\0\0\0\x46\0/\0h\0o\0m\0\x65\0/\0\x62\0o\0o\0l\0\x65\0/\0\x44\0o\0\x63\0u\0m\0\x65\0n\0t\0s\0/\0\x63\0p\0/\0\x63\0o\0\x64\0\x65\0\x66\0o\0r\0\x63\0\x65\0s), @Variant(\0\0\0\v\0\0\0\x2\0\0\0\b\0\x66\0i\0l\0\x65\0\0\0\x46\0/\0h\0o\0m\0\x65\0/\0\x62\0o\0o\0l\0\x65\0/\0\x44\0o\0\x63\0u\0m\0\x65\0n\0t\0s\0/\0\x63\0p\0/\0\x63\0o\0\x64\0\x65\0\x66\0o\0r\0\x63\0\x65\0s), @Variant(\0\0\0\v\0\0\0\x2\0\0\0\x10\0t\0\x65\0s\0t\0\x63\0\x61\0s\0\x65\0\0\0\x46\0/\0h\0o\0m\0\x65\0/\0\x62\0o\0o\0l\0\x65\0/\0\x44\0o\0\x63\0u\0m\0\x65\0n\0t\0s\0/\0\x63\0p\0/\0\x63\0o\0\x64\0\x65\0\x66\0o\0r\0\x63\0\x65\0s)

[hot_exit]
auto_save=false
auto_save_interval=20000
enable=true

[hotkey]
change_view_mode=
compile=
compile_run=
format=
kill=
run=
snippets=

[java]
class_name=Main
compile_command=javac
compiler_output_codec=UTF-8
output_path=${tmpdir}
parentheses=@Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0(\0\0\0\x2\0\0\0)\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0{\0\0\0\x2\0\0\0}\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0[\0\0\0\x2\0\0\0]\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1)
run_arguments=
run_command=java
template_cursor_position_offset_characters=0
template_cursor_position_offset_type=end
template_cursor_position_regex=
template_path=

[lsp]
args_cpp=
args_java=
args_python=-m pyls
delay_cpp=2000
delay_java=2000
delay_python=2000
path_cpp=clangd
path_java=
path_python=python
use_autocomplete_cpp=false
use_autocomplete_java=false
use_autocomplete_python=false
use_linting_cpp=false
use_linting_java=false
use_linting_python=false

[proxy]
enabled=true
host_name=127.0.0.1
password=
port=1080
type=System
user=

[python]
parentheses=@Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0(\0\0\0\x2\0\0\0)\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0{\0\0\0\x2\0\0\0}\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0[\0\0\0\x2\0\0\0]\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\"\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1), @Variant(\0\0\0\t\0\0\0\x5\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0'\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1\0\0\0\x2\0\0\0\x1)
run_arguments=
run_command=python
template_cursor_position_offset_characters=0
template_cursor_position_offset_type=end
template_cursor_position_regex=
template_path=

[yapf]
arguments=-m yapf
program=python
style="[style]\nbased_on_style = pep8"
